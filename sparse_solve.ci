mainmodule sparse_solve {
	readonly CProxy_Main mainProxy;
	readonly int nElements;
	readonly char fileName[250];
	
	mainchare Main {
		entry Main(CkArgMsg *m);
		entry void done(void);
		entry void doneCheck(void);
		entry void got_input(void);
		entry void reportIn(void);
	};
	message DataMsg {
//		int colInd[];
		double data[];
		int rowInd[];
	};
	message InputMsg {
		int rowInd[];
		int colInd[];
//		double data[];
		bool dep[];
		int num_rows;
		int num_cols;
		bool diag;
		int indep_row_no;
		int first_below_rows;
		int first_below_max_col;
		int rest_below_rows;
		int rest_below_max_col;
	};
	message DepsMsg {
		row_attr deps[];
	};
	message DummyMsg {
		int a;
	};
	message MapMsg {
		int map_rows[];
	};
	message xValMsg {
		double xVal[];
	};
	array [1D] ColumnsSolve {
		entry ColumnsSolve();
		entry void start(DummyMsg* msg);
		entry void get_input(InputMsg* msg);
		entry void get_deps(DepsMsg* msg);
		entry void get_map(MapMsg* msg);
		entry void get_section(CProxySection_ColumnsSolve, bool);
		entry void get_xval(xValMsg* msg);
		entry void receiveData(DataMsg* msg);
		entry void check(xValMsg* msg);
		entry void status();
	};
};
